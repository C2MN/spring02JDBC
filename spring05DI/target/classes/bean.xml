<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--spring的依赖注入
        IOC的作用就是降低削减程序间的依赖关系
        依赖关系的管理交给spring管理
          当前类中需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明
        依赖关系的维护我们称为依赖注入；
            依赖注入：能注入的数据有三种：基本类型、string
                                    其他的bean类型（在配置文件中或者注解中配置过的bean）
                                    复杂类型和集合类型
                    注入的方式有三种：使用构造函数、set方法、注解
    -->

    <!--构造函数注入
        使用的标签：constructor-arg
                    constructor-arg的属性：
                        type：用于指定要注入的数据类型，该数据类型也是构造函数中的某个或某些参数的类型
                        index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置是从0开始。
                        name：用于指定给构造函数中指定名称的参数赋值。
                        ===============以上三个用指定给构造函数中那个参数赋值=======================
                        value：用于给基本类型和String类型提供数据
                        ref：用于指定其他的bean类型数据，指定是在spring的ioc核心容器中出现过的bean对象
        优势：在获取bean对象时，注入数据是必要的操纵，否则创建对象无法成功。
        弊端：改变了bean对象的实例化方式是我们在创建对象时用不到这些数据也必须提供。
    -->
    <bean id="accountService" class="com.srx.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="test"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>
    <!--配置一个时间对象-->
    <bean id="now" class="java.util.Date"></bean>

    <!--set方法注入
          使用的标签：property
               标签的属性：
                        name:找用于指定注入时所调用的set方法名称
                        value：用于给基本类型和String类型提供数据
                        ref：用于指定其他的bean类型数据，指定是在spring的ioc核心容器中出现过的bean对象
    -->
    <bean id="accountService2" class="com.srx.service.impl.AccountServiceImpl2">
        <property name="name" value="TESt"></property>
        <property name="age" value="18"></property>
        <property name="birthday" ref="now2"></property>
    </bean>
    <!--配置一个时间对象-->
    <bean id="now2" class="java.util.Date"></bean>
</beans>